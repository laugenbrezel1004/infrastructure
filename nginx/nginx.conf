# Globale Konfiguration für NGINX
# Bestimmt die Anzahl der Worker-Prozesse basierend auf CPU-Kernen
worker_processes auto;

# Konfiguriert die Ereignisverarbeitung für Client-Verbindungen
events {
    # Maximale Anzahl gleichzeitiger Verbindungen pro Worker-Prozess
    worker_connections 1024;
}

# HTTP-Kontext für alle HTTP-bezogenen Einstellungen
http {
    # Globale Logging-Einstellungen für Zugriffe und Fehler
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log warn;

    # Globale Timeout- und Größeneinstellungen
    keepalive_timeout 65;  # Timeout für Keep-Alive-Verbindungen
    client_max_body_size 50m;  # Maximale Größe für Client-Uploads (z. B. für GitLab)

    # Upstream-Blöcke für Backend-Dienste (vereinfacht Load Balancing und Konfiguration)
    # Upstream für Apache (laurenzschmidt.de)
    upstream apache_backend {
        server apache:80;  # Verweist auf den Apache-Dienst im Docker-Netzwerk
    }

    # Upstream für GitLab
    upstream gitlab_backend {
        server gitlab:80;  # Verweist auf den GitLab-Dienst im Docker-Netzwerk
    }

    # Upstream für SonarQube
    upstream sonarqube_backend {
        server sonarqube:9000;  # Verweist auf den SonarQube-Dienst (Standardport 9000)
    }

    # Upstream für Jenkins
    upstream jenkins_backend {
        server jenkins:8080;  # Verweist auf den Jenkins-Dienst (Standardport 8080)
    }

    # HTTP-Server für Port 80 (Weiterleitung auf HTTPS und ACME-Challenges)
    server {
        # Lauscht auf Port 80 für HTTP-Anfragen
        listen 80;
        # Reagiert auf die angegebenen Domains
        server_name laurenzschmidt.de gitlab.laurenzschmidt.de sonarqube.laurenzschmidt.de jenkins.laurenzschmidt.de;

        # Logging für diesen Server-Block
        access_log /var/log/nginx/http_redirect.log;
        error_log /var/log/nginx/http_error.log warn;

        # Behandelt ACME-Challenges für Let’s Encrypt-Zertifikatserneuerung
        location /.well-known/acme-challenge/ {
            root /webroot;  # Verzeichnis für Challenge-Dateien
            try_files $uri $uri/ =404;  # Gibt 404 zurück, wenn Datei nicht gefunden
        }

        # Leitet alle anderen Anfragen auf HTTPS um
        location / {
            return 301 https://$host$request_uri;  # Permanenter Redirect (301) auf HTTPS
        }
    }

    # HTTPS-Server für laurenzschmidt.de (Apache)
    server {
        # Lauscht auf Port 443 mit SSL
        listen 443 ssl;
        # Reagiert auf die Hauptdomain
        server_name laurenzschmidt.de;

        # Pfade zu SSL-Zertifikaten (aus Docker-Compose Volume)
        ssl_certificate /etc/nginx/certs/fullchain.pem;
        ssl_certificate_key /etc/nginx/certs/privkey.pem;

        # SSL-Sicherheitsoptimierungen
        ssl_protocols TLSv1.2 TLSv1.3;  # Unterstützt nur sichere TLS-Versionen
        ssl_prefer_server_ciphers on;  # Bevorzugt Server-Ciphers
        ssl_ciphers EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH;  # Sichere Cipher-Suiten
        ssl_session_cache shared:SSL:10m;  # Gemeinsamer Cache für SSL-Sitzungen
        ssl_session_timeout 1d;  # Sitzungsdauer von 1 Tag
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;  # HSTS für 1 Jahr

        # Logging für diesen Server-Block
        access_log /var/log/nginx/apache_access.log;
        error_log /var/log/nginx/apache_error.log warn;

        # Weiterleitung aller Anfragen an den Apache-Backend
        location / {
            proxy_pass http://apache_backend;  # Verweist auf den Upstream-Block für Apache
            proxy_set_header Host $host;  # Übergibt den ursprünglichen Host-Header
            proxy_set_header X-Real-IP $remote_addr;  # Übergibt die Client-IP
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;  # Fügt Client-IP zur Forwarded-For-Kette hinzu
            proxy_set_header X-Forwarded-Proto $scheme;  # Übergibt das Protokoll (http/https)
            proxy_read_timeout 300;  # Timeout für Backend-Antworten
            proxy_connect_timeout 300;  # Timeout für Verbindungsaufbau
            proxy_send_timeout 300;  # Timeout für Senden von Anfragen
        }

        # Benutzerdefinierte Fehlerseiten
        error_page 502 503 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;  # Pfad für Fehlerseiten
        }
    }

    # HTTPS-Server für GitLab
    server {
        # Lauscht auf Port 443 mit SSL
        listen 443 ssl;
        # Reagiert auf die GitLab-Subdomain
        server_name gitlab.laurenzschmidt.de;

        # Pfade zu SSL-Zertifikaten (aus Docker-Compose Volume)
        ssl_certificate /etc/nginx/certs/fullchain.pem;
        ssl_certificate_key /etc/nginx/certs/privkey.pem;

        # SSL-Sicherheitsoptimierungen
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers on;
        ssl_ciphers EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 1d;
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

        # Logging für diesen Server-Block
        access_log /var/log/nginx/gitlab_access.log;
        error_log /var/log/nginx/gitlab_error.log warn;

        # Weiterleitung aller Anfragen an den GitLab-Backend
        location / {
            proxy_pass http://gitlab_backend;  # Verweist auf den Upstream-Block
            proxy_set_header Host $host;  # Übergibt den ursprünglichen Host-Header
            proxy_set_header X-Real-IP $remote_addr;  # Übergibt die Client-IP
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;  # Fügt Client-IP zur Forwarded-For-Kette hinzu
            proxy_set_header X-Forwarded-Proto $scheme;  # Übergibt das Protokoll (http/https)
            proxy_read_timeout 300;  # Timeout für Backend-Antworten
            proxy_connect_timeout 300;  # Timeout für Verbindungsaufbau
            proxy_send_timeout 300;  # Timeout für Senden von Anfragen
        }

        # Benutzerdefinierte Fehlerseiten
        error_page 502 503 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;  # Pfad für Fehlerseiten
        }
    }

    # HTTPS-Server für SonarQube
    server {
        # Lauscht auf Port 443 mit SSL
        listen 443 ssl;
        # Reagiert auf die SonarQube-Subdomain
        server_name sonarqube.laurenzschmidt.de;

        # Pfade zu SSL-Zertifikaten (aus Docker-Compose Volume)
        ssl_certificate /etc/nginx/certs/fullchain.pem;
        ssl_certificate_key /etc/nginx/certs/privkey.pem;

        # SSL-Sicherheitsoptimierungen
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers on;
        ssl_ciphers EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 1d;
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

        # Logging für diesen Server-Block
        access_log /var/log/nginx/sonarqube_access.log;
        error_log /var/log/nginx/sonarqube_error.log warn;

        # Weiterleitung aller Anfragen an den SonarQube-Backend
        location / {
            proxy_pass http://sonarqube_backend;  # Verweist auf den Upstream-Block
            proxy_set_header Host $host;  # Übergibt den ursprünglichen Host-Header
            proxy_set_header X-Real-IP $remote_addr;  # Übergibt die Client-IP
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;  # Fügt Client-IP zur Forwarded-For-Kette hinzu
            proxy_set_header X-Forwarded-Proto $scheme;  # Übergibt das Protokoll (http/https)
            # WebSocket-Unterstützung für SonarQube
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_read_timeout 300;  # Timeout für Backend-Antworten
            proxy_connect_timeout 300;  # Timeout für Verbindungsaufbau
            proxy_send_timeout 300;  # Timeout für Senden von Anfragen
        }

        # Benutzerdefinierte Fehlerseiten
        error_page 502 503 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;  # Pfad für Fehlerseiten
        }
    }

    # HTTPS-Server für Jenkins
    server {
        # Lauscht auf Port 443 mit SSL
        listen 443 ssl;
        # Reagiert auf die Jenkins-Subdomain
        server_name jenkins.laurenzschmidt.de;

        # Pfade zu SSL-Zertifikaten (aus Docker-Compose Volume)
        ssl_certificate /etc/nginx/certs/fullchain.pem;
        ssl_certificate_key /etc/nginx/certs/privkey.pem;

        # SSL-Sicherheitsoptimierungen
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers on;
        ssl_ciphers EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 1d;
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

        # Logging für diesen Server-Block
        access_log /var/log/nginx/jenkins_access.log;
        error_log /var/log/nginx/jenkins_error.log warn;

        # Weiterleitung aller Anfragen an den Jenkins-Backend
        location / {
            proxy_pass http://jenkins_backend;  # Verweist auf den Upstream-Block
            proxy_set_header Host $host;  # Übergibt den ursprünglichen Host-Header
            proxy_set_header X-Real-IP $remote_addr;  # Übergibt die Client-IP
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;  # Fügt Client-IP zur Forwarded-For-Kette hinzu
            proxy_set_header X-Forwarded-Proto $scheme;  # Übergibt das Protokoll (http/https)
            # WebSocket-Unterstützung für Jenkins
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_read_timeout 300;  # Timeout für Backend-Antworten
            proxy_connect_timeout 300;  # Timeout für Verbindungsaufbau
            proxy_send_timeout 300;  # Timeout für Senden von Anfragen
        }

        # Benutzerdefinierte Fehlerseiten
        error_page 502 503 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;  # Pfad für Fehlerseiten
        }
    }
}